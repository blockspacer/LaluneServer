package common;

//扩展头

message HeaderEx
{
	optional uint32 uid			= 1;
	optional uint32 gateway_id	= 2;
	optional uint32 operation_id	= 3;
	optional uint32 flag		= 4;
}

//和控制服务器通信用的Protobuf

//先发Initialize，主要是为了获取配置文件。有了配置文件，服务才能启动，然后才有之后的Hello
message Initialize
{
	required uint32 server_type			= 1;
}

message Hello
{
	required uint32 my_listening_port	= 1;
	required uint32 server_type			= 2;
	required uint32 is_server_start		= 3;
}

message HelloResult
{
	required uint32 server_id	= 1;
}

message ReportLoad
{
	required float load	= 1;
}

message AddressInfo
{
	required fixed32 ip	= 1;
	required uint32 port	= 2;
	required uint32 server_id	= 3;
	required uint32 server_type	= 4;
	optional string outer_ip	= 5;
}

message AddressList
{
	repeated AddressInfo addr	= 1;
}

message ServerId
{
	required uint32 server_id	= 1;
}

message Cmd2Server
{
	optional uint32 to_server_type	= 1;
	required uint32 cmd_type		= 2;
	required bytes data				= 3;
}

message ConfigFile
{
	required string file_name	= 1;
	required bytes content		= 2;
}

message RefreshConfig
{
	optional uint32 server_type	= 1;
	repeated ConfigFile file	= 2;
}

message HashVirtualNode
{
	required uint32 hash_value_begin	= 1;
	required uint32 hash_value_end		= 2;
	required uint32 server_id			= 3;
}

message HashFunctionChange
{
	repeated HashVirtualNode nodes	= 1;
}

message HashFunctionChangeAccepted
{
}

message CompleteHashFunction
{
	required uint32 prime	= 2;
	repeated HashVirtualNode nodes	= 1;
}

message DenyServiceBecauseHashChange
{
	required uint32 new_server_id	= 1;
	required uint32 msg_type		= 2;
	required bytes msg_data			= 3;
}

