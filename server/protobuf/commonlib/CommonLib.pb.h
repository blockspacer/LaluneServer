// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commonlib/CommonLib.proto

#ifndef PROTOBUF_commonlib_2fCommonLib_2eproto__INCLUDED
#define PROTOBUF_commonlib_2fCommonLib_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_commonlib_2fCommonLib_2eproto();
void protobuf_AssignDesc_commonlib_2fCommonLib_2eproto();
void protobuf_ShutdownFile_commonlib_2fCommonLib_2eproto();

class CorrespondingServer;
class HeaderEx;
class Hello;
class ReportLoad;
class AddressInfo;
class AddressList;

// ===================================================================

class CorrespondingServer : public ::google_lalune::protobuf::Message {
 public:
  CorrespondingServer();
  virtual ~CorrespondingServer();

  CorrespondingServer(const CorrespondingServer& from);

  inline CorrespondingServer& operator=(const CorrespondingServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_lalune::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_lalune::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_lalune::protobuf::Descriptor* descriptor();
  static const CorrespondingServer& default_instance();

  void Swap(CorrespondingServer* other);

  // implements Message ----------------------------------------------

  CorrespondingServer* New() const;
  void CopyFrom(const ::google_lalune::protobuf::Message& from);
  void MergeFrom(const ::google_lalune::protobuf::Message& from);
  void CopyFrom(const CorrespondingServer& from);
  void MergeFrom(const CorrespondingServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_lalune::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_lalune::protobuf::io::CodedOutputStream* output) const;
  ::google_lalune::protobuf::uint8* SerializeWithCachedSizesToArray(::google_lalune::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_lalune::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 servertype = 1;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServertypeFieldNumber = 1;
  inline ::google_lalune::protobuf::uint32 servertype() const;
  inline void set_servertype(::google_lalune::protobuf::uint32 value);

  // required uint32 serverid = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 2;
  inline ::google_lalune::protobuf::uint32 serverid() const;
  inline void set_serverid(::google_lalune::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:common.CorrespondingServer)
 private:
  inline void set_has_servertype();
  inline void clear_has_servertype();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google_lalune::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_lalune::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_lalune::protobuf::uint32 servertype_;
  ::google_lalune::protobuf::uint32 serverid_;
  friend void  protobuf_AddDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_AssignDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_ShutdownFile_commonlib_2fCommonLib_2eproto();

  void InitAsDefaultInstance();
  static CorrespondingServer* default_instance_;
};
// -------------------------------------------------------------------

class HeaderEx : public ::google_lalune::protobuf::Message {
 public:
  HeaderEx();
  virtual ~HeaderEx();

  HeaderEx(const HeaderEx& from);

  inline HeaderEx& operator=(const HeaderEx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_lalune::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_lalune::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_lalune::protobuf::Descriptor* descriptor();
  static const HeaderEx& default_instance();

  void Swap(HeaderEx* other);

  // implements Message ----------------------------------------------

  HeaderEx* New() const;
  void CopyFrom(const ::google_lalune::protobuf::Message& from);
  void MergeFrom(const ::google_lalune::protobuf::Message& from);
  void CopyFrom(const HeaderEx& from);
  void MergeFrom(const HeaderEx& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_lalune::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_lalune::protobuf::io::CodedOutputStream* output) const;
  ::google_lalune::protobuf::uint8* SerializeWithCachedSizesToArray(::google_lalune::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_lalune::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google_lalune::protobuf::uint64 uid() const;
  inline void set_uid(::google_lalune::protobuf::uint64 value);

  // repeated .common.CorrespondingServer servers = 2;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 2;
  inline const ::common::CorrespondingServer& servers(int index) const;
  inline ::common::CorrespondingServer* mutable_servers(int index);
  inline ::common::CorrespondingServer* add_servers();
  inline const ::google_lalune::protobuf::RepeatedPtrField< ::common::CorrespondingServer >&
      servers() const;
  inline ::google_lalune::protobuf::RepeatedPtrField< ::common::CorrespondingServer >*
      mutable_servers();

  // @@protoc_insertion_point(class_scope:common.HeaderEx)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google_lalune::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_lalune::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_lalune::protobuf::uint64 uid_;
  ::google_lalune::protobuf::RepeatedPtrField< ::common::CorrespondingServer > servers_;
  friend void  protobuf_AddDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_AssignDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_ShutdownFile_commonlib_2fCommonLib_2eproto();

  void InitAsDefaultInstance();
  static HeaderEx* default_instance_;
};
// -------------------------------------------------------------------

class Hello : public ::google_lalune::protobuf::Message {
 public:
  Hello();
  virtual ~Hello();

  Hello(const Hello& from);

  inline Hello& operator=(const Hello& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_lalune::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_lalune::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_lalune::protobuf::Descriptor* descriptor();
  static const Hello& default_instance();

  void Swap(Hello* other);

  // implements Message ----------------------------------------------

  Hello* New() const;
  void CopyFrom(const ::google_lalune::protobuf::Message& from);
  void MergeFrom(const ::google_lalune::protobuf::Message& from);
  void CopyFrom(const Hello& from);
  void MergeFrom(const Hello& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_lalune::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_lalune::protobuf::io::CodedOutputStream* output) const;
  ::google_lalune::protobuf::uint8* SerializeWithCachedSizesToArray(::google_lalune::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_lalune::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 my_listening_port = 1;
  inline bool has_my_listening_port() const;
  inline void clear_my_listening_port();
  static const int kMyListeningPortFieldNumber = 1;
  inline ::google_lalune::protobuf::uint32 my_listening_port() const;
  inline void set_my_listening_port(::google_lalune::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:common.Hello)
 private:
  inline void set_has_my_listening_port();
  inline void clear_has_my_listening_port();

  ::google_lalune::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_lalune::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_lalune::protobuf::uint32 my_listening_port_;
  friend void  protobuf_AddDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_AssignDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_ShutdownFile_commonlib_2fCommonLib_2eproto();

  void InitAsDefaultInstance();
  static Hello* default_instance_;
};
// -------------------------------------------------------------------

class ReportLoad : public ::google_lalune::protobuf::Message {
 public:
  ReportLoad();
  virtual ~ReportLoad();

  ReportLoad(const ReportLoad& from);

  inline ReportLoad& operator=(const ReportLoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_lalune::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_lalune::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_lalune::protobuf::Descriptor* descriptor();
  static const ReportLoad& default_instance();

  void Swap(ReportLoad* other);

  // implements Message ----------------------------------------------

  ReportLoad* New() const;
  void CopyFrom(const ::google_lalune::protobuf::Message& from);
  void MergeFrom(const ::google_lalune::protobuf::Message& from);
  void CopyFrom(const ReportLoad& from);
  void MergeFrom(const ReportLoad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_lalune::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_lalune::protobuf::io::CodedOutputStream* output) const;
  ::google_lalune::protobuf::uint8* SerializeWithCachedSizesToArray(::google_lalune::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_lalune::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float load = 1;
  inline bool has_load() const;
  inline void clear_load();
  static const int kLoadFieldNumber = 1;
  inline float load() const;
  inline void set_load(float value);

  // @@protoc_insertion_point(class_scope:common.ReportLoad)
 private:
  inline void set_has_load();
  inline void clear_has_load();

  ::google_lalune::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_lalune::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float load_;
  friend void  protobuf_AddDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_AssignDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_ShutdownFile_commonlib_2fCommonLib_2eproto();

  void InitAsDefaultInstance();
  static ReportLoad* default_instance_;
};
// -------------------------------------------------------------------

class AddressInfo : public ::google_lalune::protobuf::Message {
 public:
  AddressInfo();
  virtual ~AddressInfo();

  AddressInfo(const AddressInfo& from);

  inline AddressInfo& operator=(const AddressInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_lalune::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_lalune::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_lalune::protobuf::Descriptor* descriptor();
  static const AddressInfo& default_instance();

  void Swap(AddressInfo* other);

  // implements Message ----------------------------------------------

  AddressInfo* New() const;
  void CopyFrom(const ::google_lalune::protobuf::Message& from);
  void MergeFrom(const ::google_lalune::protobuf::Message& from);
  void CopyFrom(const AddressInfo& from);
  void MergeFrom(const AddressInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_lalune::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_lalune::protobuf::io::CodedOutputStream* output) const;
  ::google_lalune::protobuf::uint8* SerializeWithCachedSizesToArray(::google_lalune::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_lalune::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google_lalune::protobuf::uint32 ip() const;
  inline void set_ip(::google_lalune::protobuf::uint32 value);

  // required uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google_lalune::protobuf::uint32 port() const;
  inline void set_port(::google_lalune::protobuf::uint32 value);

  // required uint32 serverid = 3;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 3;
  inline ::google_lalune::protobuf::uint32 serverid() const;
  inline void set_serverid(::google_lalune::protobuf::uint32 value);

  // required uint32 servertype = 4;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServertypeFieldNumber = 4;
  inline ::google_lalune::protobuf::uint32 servertype() const;
  inline void set_servertype(::google_lalune::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:common.AddressInfo)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_servertype();
  inline void clear_has_servertype();

  ::google_lalune::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_lalune::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_lalune::protobuf::uint32 ip_;
  ::google_lalune::protobuf::uint32 port_;
  ::google_lalune::protobuf::uint32 serverid_;
  ::google_lalune::protobuf::uint32 servertype_;
  friend void  protobuf_AddDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_AssignDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_ShutdownFile_commonlib_2fCommonLib_2eproto();

  void InitAsDefaultInstance();
  static AddressInfo* default_instance_;
};
// -------------------------------------------------------------------

class AddressList : public ::google_lalune::protobuf::Message {
 public:
  AddressList();
  virtual ~AddressList();

  AddressList(const AddressList& from);

  inline AddressList& operator=(const AddressList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_lalune::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_lalune::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_lalune::protobuf::Descriptor* descriptor();
  static const AddressList& default_instance();

  void Swap(AddressList* other);

  // implements Message ----------------------------------------------

  AddressList* New() const;
  void CopyFrom(const ::google_lalune::protobuf::Message& from);
  void MergeFrom(const ::google_lalune::protobuf::Message& from);
  void CopyFrom(const AddressList& from);
  void MergeFrom(const AddressList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_lalune::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_lalune::protobuf::io::CodedOutputStream* output) const;
  ::google_lalune::protobuf::uint8* SerializeWithCachedSizesToArray(::google_lalune::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_lalune::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common.AddressInfo addr = 1;
  inline int addr_size() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 1;
  inline const ::common::AddressInfo& addr(int index) const;
  inline ::common::AddressInfo* mutable_addr(int index);
  inline ::common::AddressInfo* add_addr();
  inline const ::google_lalune::protobuf::RepeatedPtrField< ::common::AddressInfo >&
      addr() const;
  inline ::google_lalune::protobuf::RepeatedPtrField< ::common::AddressInfo >*
      mutable_addr();

  // @@protoc_insertion_point(class_scope:common.AddressList)
 private:

  ::google_lalune::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_lalune::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_lalune::protobuf::RepeatedPtrField< ::common::AddressInfo > addr_;
  friend void  protobuf_AddDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_AssignDesc_commonlib_2fCommonLib_2eproto();
  friend void protobuf_ShutdownFile_commonlib_2fCommonLib_2eproto();

  void InitAsDefaultInstance();
  static AddressList* default_instance_;
};
// ===================================================================


// ===================================================================

// CorrespondingServer

// required uint32 servertype = 1;
inline bool CorrespondingServer::has_servertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CorrespondingServer::set_has_servertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CorrespondingServer::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CorrespondingServer::clear_servertype() {
  servertype_ = 0u;
  clear_has_servertype();
}
inline ::google_lalune::protobuf::uint32 CorrespondingServer::servertype() const {
  // @@protoc_insertion_point(field_get:common.CorrespondingServer.servertype)
  return servertype_;
}
inline void CorrespondingServer::set_servertype(::google_lalune::protobuf::uint32 value) {
  set_has_servertype();
  servertype_ = value;
  // @@protoc_insertion_point(field_set:common.CorrespondingServer.servertype)
}

// required uint32 serverid = 2;
inline bool CorrespondingServer::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CorrespondingServer::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CorrespondingServer::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CorrespondingServer::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google_lalune::protobuf::uint32 CorrespondingServer::serverid() const {
  // @@protoc_insertion_point(field_get:common.CorrespondingServer.serverid)
  return serverid_;
}
inline void CorrespondingServer::set_serverid(::google_lalune::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:common.CorrespondingServer.serverid)
}

// -------------------------------------------------------------------

// HeaderEx

// optional uint64 uid = 1;
inline bool HeaderEx::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeaderEx::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeaderEx::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeaderEx::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google_lalune::protobuf::uint64 HeaderEx::uid() const {
  // @@protoc_insertion_point(field_get:common.HeaderEx.uid)
  return uid_;
}
inline void HeaderEx::set_uid(::google_lalune::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:common.HeaderEx.uid)
}

// repeated .common.CorrespondingServer servers = 2;
inline int HeaderEx::servers_size() const {
  return servers_.size();
}
inline void HeaderEx::clear_servers() {
  servers_.Clear();
}
inline const ::common::CorrespondingServer& HeaderEx::servers(int index) const {
  // @@protoc_insertion_point(field_get:common.HeaderEx.servers)
  return servers_.Get(index);
}
inline ::common::CorrespondingServer* HeaderEx::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:common.HeaderEx.servers)
  return servers_.Mutable(index);
}
inline ::common::CorrespondingServer* HeaderEx::add_servers() {
  // @@protoc_insertion_point(field_add:common.HeaderEx.servers)
  return servers_.Add();
}
inline const ::google_lalune::protobuf::RepeatedPtrField< ::common::CorrespondingServer >&
HeaderEx::servers() const {
  // @@protoc_insertion_point(field_list:common.HeaderEx.servers)
  return servers_;
}
inline ::google_lalune::protobuf::RepeatedPtrField< ::common::CorrespondingServer >*
HeaderEx::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:common.HeaderEx.servers)
  return &servers_;
}

// -------------------------------------------------------------------

// Hello

// required uint32 my_listening_port = 1;
inline bool Hello::has_my_listening_port() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Hello::set_has_my_listening_port() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Hello::clear_has_my_listening_port() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Hello::clear_my_listening_port() {
  my_listening_port_ = 0u;
  clear_has_my_listening_port();
}
inline ::google_lalune::protobuf::uint32 Hello::my_listening_port() const {
  // @@protoc_insertion_point(field_get:common.Hello.my_listening_port)
  return my_listening_port_;
}
inline void Hello::set_my_listening_port(::google_lalune::protobuf::uint32 value) {
  set_has_my_listening_port();
  my_listening_port_ = value;
  // @@protoc_insertion_point(field_set:common.Hello.my_listening_port)
}

// -------------------------------------------------------------------

// ReportLoad

// required float load = 1;
inline bool ReportLoad::has_load() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportLoad::set_has_load() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportLoad::clear_has_load() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportLoad::clear_load() {
  load_ = 0;
  clear_has_load();
}
inline float ReportLoad::load() const {
  // @@protoc_insertion_point(field_get:common.ReportLoad.load)
  return load_;
}
inline void ReportLoad::set_load(float value) {
  set_has_load();
  load_ = value;
  // @@protoc_insertion_point(field_set:common.ReportLoad.load)
}

// -------------------------------------------------------------------

// AddressInfo

// required fixed32 ip = 1;
inline bool AddressInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddressInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddressInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddressInfo::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google_lalune::protobuf::uint32 AddressInfo::ip() const {
  // @@protoc_insertion_point(field_get:common.AddressInfo.ip)
  return ip_;
}
inline void AddressInfo::set_ip(::google_lalune::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:common.AddressInfo.ip)
}

// required uint32 port = 2;
inline bool AddressInfo::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddressInfo::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddressInfo::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddressInfo::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google_lalune::protobuf::uint32 AddressInfo::port() const {
  // @@protoc_insertion_point(field_get:common.AddressInfo.port)
  return port_;
}
inline void AddressInfo::set_port(::google_lalune::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:common.AddressInfo.port)
}

// required uint32 serverid = 3;
inline bool AddressInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddressInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddressInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddressInfo::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google_lalune::protobuf::uint32 AddressInfo::serverid() const {
  // @@protoc_insertion_point(field_get:common.AddressInfo.serverid)
  return serverid_;
}
inline void AddressInfo::set_serverid(::google_lalune::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:common.AddressInfo.serverid)
}

// required uint32 servertype = 4;
inline bool AddressInfo::has_servertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddressInfo::set_has_servertype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddressInfo::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddressInfo::clear_servertype() {
  servertype_ = 0u;
  clear_has_servertype();
}
inline ::google_lalune::protobuf::uint32 AddressInfo::servertype() const {
  // @@protoc_insertion_point(field_get:common.AddressInfo.servertype)
  return servertype_;
}
inline void AddressInfo::set_servertype(::google_lalune::protobuf::uint32 value) {
  set_has_servertype();
  servertype_ = value;
  // @@protoc_insertion_point(field_set:common.AddressInfo.servertype)
}

// -------------------------------------------------------------------

// AddressList

// repeated .common.AddressInfo addr = 1;
inline int AddressList::addr_size() const {
  return addr_.size();
}
inline void AddressList::clear_addr() {
  addr_.Clear();
}
inline const ::common::AddressInfo& AddressList::addr(int index) const {
  // @@protoc_insertion_point(field_get:common.AddressList.addr)
  return addr_.Get(index);
}
inline ::common::AddressInfo* AddressList::mutable_addr(int index) {
  // @@protoc_insertion_point(field_mutable:common.AddressList.addr)
  return addr_.Mutable(index);
}
inline ::common::AddressInfo* AddressList::add_addr() {
  // @@protoc_insertion_point(field_add:common.AddressList.addr)
  return addr_.Add();
}
inline const ::google_lalune::protobuf::RepeatedPtrField< ::common::AddressInfo >&
AddressList::addr() const {
  // @@protoc_insertion_point(field_list:common.AddressList.addr)
  return addr_;
}
inline ::google_lalune::protobuf::RepeatedPtrField< ::common::AddressInfo >*
AddressList::mutable_addr() {
  // @@protoc_insertion_point(field_mutable_list:common.AddressList.addr)
  return &addr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace common

#ifndef SWIG
namespace google_lalune {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_commonlib_2fCommonLib_2eproto__INCLUDED
